<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >


<!-- 不使用namespace的话sql搜索定位会比较方便 -->
<mapper namespace="cn.cf.dao.B2bCreditDao">


	<!-- 用于select查询公用抽取的列 -->
	<sql id="columns">
	    <![CDATA[
		pk,companyPk,companyName,creditStatus,creditReason,creditContacts,creditContactsTel,creditAddress,creditInsertTime,creditAuditTime,memberPk,virtualPayPassword,isDelete,financePk,financeContacts,source,processInstanceId,certificateStatus,delegateCertUrl,taxNature,taxAuthorityCode,taxAuthorityName,creditInfo
	    ]]>
	</sql>

	<insert id="insert" useGeneratedKeys="true"
		keyProperty="pk">
    <![CDATA[
        INSERT INTO b2b_credit (
         pk, companyPk, companyName, creditStatus, creditReason, creditContacts, creditContactsTel, creditAddress, creditInsertTime, creditAuditTime, memberPk, virtualPayPassword, isDelete, financePk, financeContacts, source, processInstanceId, certificateStatus, delegateCertUrl, taxNature, taxAuthorityCode, taxAuthorityName, creditInfo
        ) VALUES (
         #{pk}, #{companyPk}, #{companyName}, #{creditStatus}, #{creditReason}, #{creditContacts}, #{creditContactsTel}, #{creditAddress}, #{creditInsertTime}, #{creditAuditTime}, #{memberPk}, #{virtualPayPassword}, #{isDelete}, #{financePk}, #{financeContacts}, #{source}, #{processInstanceId}, #{certificateStatus}, #{delegateCertUrl}, #{taxNature}, #{taxAuthorityCode}, #{taxAuthorityName}, #{creditInfo}        
        )
    ]]>
	</insert>

	<update id="update" parameterType="cn.cf.model.B2bCredit">
    <![CDATA[
        UPDATE b2b_credit SET
	        companyPk = #{companyPk} , companyName = #{companyName} , creditStatus = #{creditStatus} , creditReason = #{creditReason} , creditContacts = #{creditContacts} , creditContactsTel = #{creditContactsTel} , creditAddress = #{creditAddress} , creditInsertTime = #{creditInsertTime} , creditAuditTime = #{creditAuditTime} , memberPk = #{memberPk} , virtualPayPassword = #{virtualPayPassword} , isDelete = #{isDelete} , financePk = #{financePk} , financeContacts = #{financeContacts} , source = #{source} , processInstanceId = #{processInstanceId} , certificateStatus = #{certificateStatus} , delegateCertUrl = #{delegateCertUrl} , taxNature = #{taxNature} , taxAuthorityCode = #{taxAuthorityCode} , taxAuthorityName = #{taxAuthorityName} , creditInfo = #{creditInfo}  
        WHERE 
        	pk = #{pk}  	        
    ]]>
	</update>

	<delete id="delete" parameterType="cn.cf.model.B2bCredit">
    <![CDATA[
        DELETE FROM b2b_credit WHERE
        pk = #{id} 
    ]]>
	</delete>

	<sql id="searchGridWhere">
		<!-- ognl访问静态方法的表达式 为@class@method(args),以下为调用rapid中的Ognl.isNotEmpty()方法,还有其它方法如isNotBlank()可以使用，具体请查看Ognl类 -->
		<where>
			<if test="@Ognl@isNotEmpty(pk)">
				AND pk = #{pk}			</if>
			<if test="@Ognl@isNotEmpty(companyPk)">
				AND companyPk = #{companyPk}			</if>
			<if test="@Ognl@isNotEmpty(companyName)">
				AND companyName = #{companyName}			</if>
			<if test="@Ognl@isNotEmpty(creditStatus)">
				AND creditStatus = #{creditStatus}			</if>
			<if test="@Ognl@isNotEmpty(creditReason)">
				AND creditReason = #{creditReason}			</if>
			<if test="@Ognl@isNotEmpty(creditContacts)">
				AND creditContacts = #{creditContacts}			</if>
			<if test="@Ognl@isNotEmpty(creditContactsTel)">
				AND creditContactsTel = #{creditContactsTel}			</if>
			<if test="@Ognl@isNotEmpty(creditAddress)">
				AND creditAddress = #{creditAddress}			</if>
			<if test="@Ognl@isNotEmpty(creditInsertTimeBegin)">
				AND creditInsertTime >= #{creditInsertTimeBegin}			</if>
			<if test="@Ognl@isNotEmpty(creditInsertTimeEnd)">
				AND creditInsertTime &lt;= #{creditInsertTimeEnd}			</if>
			<if test="@Ognl@isNotEmpty(creditAuditTimeBegin)">
				AND creditAuditTime >= #{creditAuditTimeBegin}			</if>
			<if test="@Ognl@isNotEmpty(creditAuditTimeEnd)">
				AND creditAuditTime &lt;= #{creditAuditTimeEnd}			</if>
			<if test="@Ognl@isNotEmpty(memberPk)">
				AND memberPk = #{memberPk}			</if>
			<if test="@Ognl@isNotEmpty(virtualPayPassword)">
				AND virtualPayPassword = #{virtualPayPassword}			</if>
			<if test="@Ognl@isNotEmpty(isDelete)">
				AND isDelete = #{isDelete}			</if>
			<if test="@Ognl@isNotEmpty(financePk)">
				AND financePk = #{financePk}			</if>
			<if test="@Ognl@isNotEmpty(financeContacts)">
				AND financeContacts = #{financeContacts}			</if>
			<if test="@Ognl@isNotEmpty(source)">
				AND source = #{source}			</if>
			<if test="@Ognl@isNotEmpty(processInstanceId)">
				AND processInstanceId = #{processInstanceId}			</if>
			<if test="@Ognl@isNotEmpty(certificateStatus)">
				AND certificateStatus = #{certificateStatus}			</if>
			<if test="@Ognl@isNotEmpty(delegateCertUrl)">
				AND delegateCertUrl = #{delegateCertUrl}			</if>
			<if test="@Ognl@isNotEmpty(taxNature)">
				AND taxNature = #{taxNature}			</if>
			<if test="@Ognl@isNotEmpty(taxAuthorityCode)">
				AND taxAuthorityCode = #{taxAuthorityCode}			</if>
			<if test="@Ognl@isNotEmpty(taxAuthorityName)">
				AND taxAuthorityName = #{taxAuthorityName}			</if>
			<if test="@Ognl@isNotEmpty(creditInfo)">
				AND creditInfo = #{creditInfo}			</if>
		</where>
	</sql>

	<select id="searchGridCount" parameterType="java.util.Map"
		resultType="int">
		SELECT count(*) FROM b2b_credit
		<include refid="searchGridWhere" />
	</select>

	<!-- 分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页 因为分页查询将传 offset,pageSize,lastRows 
		三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现 -->
	<select id="searchGrid" resultType="cn.cf.dto.B2bCreditDto"
		parameterType="java.util.Map">
		SELECT
		<include refid="columns" />
		FROM b2b_credit
		<include refid="searchGridWhere" />
	</select>
	<select id="searchList" resultType="cn.cf.dto.B2bCreditDto"
		parameterType="java.util.Map">
		SELECT
		<include refid="columns" />
		FROM b2b_credit
		<include refid="searchGridWhere" />
	</select>
	<select id="getByPk" resultType="cn.cf.dto.B2bCreditDto"
		parameterType="java.lang.String">
		SELECT
		<include refid="columns" />
		FROM b2b_credit where pk = #{pk}	</select>
	<select id="getByCompanyPk" resultType="cn.cf.dto.B2bCreditDto"
		parameterType="java.lang.String">
		SELECT
		<include refid="columns" />
		FROM b2b_credit where companyPk = #{companyPk}	</select>
	<select id="getByCompanyName" resultType="cn.cf.dto.B2bCreditDto"
		parameterType="java.lang.String">
		SELECT
		<include refid="columns" />
		FROM b2b_credit where companyName = #{companyName}	</select>
	<select id="getByCreditReason" resultType="cn.cf.dto.B2bCreditDto"
		parameterType="java.lang.String">
		SELECT
		<include refid="columns" />
		FROM b2b_credit where creditReason = #{creditReason}	</select>
	<select id="getByCreditContacts" resultType="cn.cf.dto.B2bCreditDto"
		parameterType="java.lang.String">
		SELECT
		<include refid="columns" />
		FROM b2b_credit where creditContacts = #{creditContacts}	</select>
	<select id="getByCreditContactsTel" resultType="cn.cf.dto.B2bCreditDto"
		parameterType="java.lang.String">
		SELECT
		<include refid="columns" />
		FROM b2b_credit where creditContactsTel = #{creditContactsTel}	</select>
	<select id="getByCreditAddress" resultType="cn.cf.dto.B2bCreditDto"
		parameterType="java.lang.String">
		SELECT
		<include refid="columns" />
		FROM b2b_credit where creditAddress = #{creditAddress}	</select>
	<select id="getByMemberPk" resultType="cn.cf.dto.B2bCreditDto"
		parameterType="java.lang.String">
		SELECT
		<include refid="columns" />
		FROM b2b_credit where memberPk = #{memberPk}	</select>
	<select id="getByVirtualPayPassword" resultType="cn.cf.dto.B2bCreditDto"
		parameterType="java.lang.String">
		SELECT
		<include refid="columns" />
		FROM b2b_credit where virtualPayPassword = #{virtualPayPassword}	</select>
	<select id="getByFinancePk" resultType="cn.cf.dto.B2bCreditDto"
		parameterType="java.lang.String">
		SELECT
		<include refid="columns" />
		FROM b2b_credit where financePk = #{financePk}	</select>
	<select id="getByFinanceContacts" resultType="cn.cf.dto.B2bCreditDto"
		parameterType="java.lang.String">
		SELECT
		<include refid="columns" />
		FROM b2b_credit where financeContacts = #{financeContacts}	</select>
	<select id="getBySource" resultType="cn.cf.dto.B2bCreditDto"
		parameterType="java.lang.String">
		SELECT
		<include refid="columns" />
		FROM b2b_credit where source = #{source}	</select>
	<select id="getByProcessInstanceId" resultType="cn.cf.dto.B2bCreditDto"
		parameterType="java.lang.String">
		SELECT
		<include refid="columns" />
		FROM b2b_credit where processInstanceId = #{processInstanceId}	</select>
	<select id="getByDelegateCertUrl" resultType="cn.cf.dto.B2bCreditDto"
		parameterType="java.lang.String">
		SELECT
		<include refid="columns" />
		FROM b2b_credit where delegateCertUrl = #{delegateCertUrl}	</select>
	<select id="getByTaxAuthorityCode" resultType="cn.cf.dto.B2bCreditDto"
		parameterType="java.lang.String">
		SELECT
		<include refid="columns" />
		FROM b2b_credit where taxAuthorityCode = #{taxAuthorityCode}	</select>
	<select id="getByTaxAuthorityName" resultType="cn.cf.dto.B2bCreditDto"
		parameterType="java.lang.String">
		SELECT
		<include refid="columns" />
		FROM b2b_credit where taxAuthorityName = #{taxAuthorityName}	</select>
	<select id="getByCreditInfo" resultType="cn.cf.dto.B2bCreditDto"
		parameterType="java.lang.String">
		SELECT
		<include refid="columns" />
		FROM b2b_credit where creditInfo = #{creditInfo}	</select>
</mapper>

