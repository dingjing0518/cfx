<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >


<!-- 不使用namespace的话sql搜索定位会比较方便 -->
<mapper namespace="cn.cf.dao.B2bOrderGoodsDao">


	<!-- 用于select查询公用抽取的列 -->
	<sql id="columns">
	    <![CDATA[
		orderNumber,goodsPk,weight,boxes,originalPrice,presentPrice,originalFreight,presentFreight,originalTotalFreight,presentTotalFreight,weightShipped,boxesShipped,orderStatus,childOrderNumber,logisticsPk,logisticsStepInfoPk,afterBoxes,afterWeight,logisticsCarrierPk,logisticsCarrierName,goodsType,goodsInfo,childContractNo,block
	    ]]>
	</sql>

	<insert id="insert" useGeneratedKeys="true"
		keyProperty="childOrderNumber">
    <![CDATA[
        INSERT INTO b2b_order_goods (
         orderNumber, goodsPk, weight, boxes, originalPrice, presentPrice, originalFreight, presentFreight, originalTotalFreight, presentTotalFreight, weightShipped, boxesShipped, orderStatus, childOrderNumber, logisticsPk, logisticsStepInfoPk, afterBoxes, afterWeight, logisticsCarrierPk, logisticsCarrierName, goodsType, goodsInfo, childContractNo
        ) VALUES (
         #{orderNumber}, #{goodsPk}, #{weight}, #{boxes}, #{originalPrice}, #{presentPrice}, #{originalFreight}, #{presentFreight}, #{originalTotalFreight}, #{presentTotalFreight}, #{weightShipped}, #{boxesShipped}, #{orderStatus}, #{childOrderNumber}, #{logisticsPk}, #{logisticsStepInfoPk}, #{afterBoxes}, #{afterWeight}, #{logisticsCarrierPk}, #{logisticsCarrierName}, #{goodsType}, #{goodsInfo}, #{childContractNo}        
        )
    ]]>
	</insert>

	<update id="update" parameterType="cn.cf.model.B2bOrderGoods">
    <![CDATA[
        UPDATE b2b_order_goods SET
	        orderNumber = #{orderNumber} , goodsPk = #{goodsPk} , weight = #{weight} , boxes = #{boxes} , originalPrice = #{originalPrice} , presentPrice = #{presentPrice} , originalFreight = #{originalFreight} , presentFreight = #{presentFreight} , originalTotalFreight = #{originalTotalFreight} , presentTotalFreight = #{presentTotalFreight} , weightShipped = #{weightShipped} , boxesShipped = #{boxesShipped} , orderStatus = #{orderStatus} , logisticsPk = #{logisticsPk} , logisticsStepInfoPk = #{logisticsStepInfoPk} , afterBoxes = #{afterBoxes} , afterWeight = #{afterWeight} , logisticsCarrierPk = #{logisticsCarrierPk} , logisticsCarrierName = #{logisticsCarrierName} , goodsType = #{goodsType} , goodsInfo = #{goodsInfo} , childContractNo = #{childContractNo}  
        WHERE 
        	childOrderNumber = #{childOrderNumber}  	        
    ]]>
	</update>

	<delete id="delete" parameterType="cn.cf.model.B2bOrderGoods">
    <![CDATA[
        DELETE FROM b2b_order_goods WHERE
        childOrderNumber = #{id} 
    ]]>
	</delete>

	<sql id="searchGridWhere">
		<!-- ognl访问静态方法的表达式 为@class@method(args),以下为调用rapid中的Ognl.isNotEmpty()方法,还有其它方法如isNotBlank()可以使用，具体请查看Ognl类 -->
		<where>
			<if test="@Ognl@isNotEmpty(orderNumber)">
				AND orderNumber = #{orderNumber}			</if>
			<if test="@Ognl@isNotEmpty(goodsPk)">
				AND goodsPk = #{goodsPk}			</if>
			<if test="@Ognl@isNotEmpty(weight)">
				AND weight = #{weight}			</if>
			<if test="@Ognl@isNotEmpty(boxes)">
				AND boxes = #{boxes}			</if>
			<if test="@Ognl@isNotEmpty(originalPrice)">
				AND originalPrice = #{originalPrice}			</if>
			<if test="@Ognl@isNotEmpty(presentPrice)">
				AND presentPrice = #{presentPrice}			</if>
			<if test="@Ognl@isNotEmpty(originalFreight)">
				AND originalFreight = #{originalFreight}			</if>
			<if test="@Ognl@isNotEmpty(presentFreight)">
				AND presentFreight = #{presentFreight}			</if>
			<if test="@Ognl@isNotEmpty(originalTotalFreight)">
				AND originalTotalFreight = #{originalTotalFreight}			</if>
			<if test="@Ognl@isNotEmpty(presentTotalFreight)">
				AND presentTotalFreight = #{presentTotalFreight}			</if>
			<if test="@Ognl@isNotEmpty(weightShipped)">
				AND weightShipped = #{weightShipped}			</if>
			<if test="@Ognl@isNotEmpty(boxesShipped)">
				AND boxesShipped = #{boxesShipped}			</if>
			<if test="@Ognl@isNotEmpty(orderStatus)">
				AND orderStatus = #{orderStatus}			</if>
			<if test="@Ognl@isNotEmpty(childOrderNumber)">
				AND childOrderNumber = #{childOrderNumber}			</if>
			<if test="@Ognl@isNotEmpty(logisticsPk)">
				AND logisticsPk = #{logisticsPk}			</if>
			<if test="@Ognl@isNotEmpty(logisticsStepInfoPk)">
				AND logisticsStepInfoPk = #{logisticsStepInfoPk}			</if>
			<if test="@Ognl@isNotEmpty(afterBoxes)">
				AND afterBoxes = #{afterBoxes}			</if>
			<if test="@Ognl@isNotEmpty(afterWeight)">
				AND afterWeight = #{afterWeight}			</if>
			<if test="@Ognl@isNotEmpty(logisticsCarrierPk)">
				AND logisticsCarrierPk = #{logisticsCarrierPk}			</if>
			<if test="@Ognl@isNotEmpty(logisticsCarrierName)">
				AND logisticsCarrierName = #{logisticsCarrierName}			</if>
			<if test="@Ognl@isNotEmpty(goodsType)">
				AND goodsType = #{goodsType}			</if>
			<if test="@Ognl@isNotEmpty(goodsInfo)">
				AND goodsInfo = #{goodsInfo}			</if>
			<if test="@Ognl@isNotEmpty(childContractNo)">
				AND childContractNo = #{childContractNo}			</if>
		</where>
	</sql>

	<select id="searchGridCount" parameterType="java.util.Map"
		resultType="int">
		SELECT count(*) FROM b2b_order_goods
		<include refid="searchGridWhere" />
	</select>

	<!-- 分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页 因为分页查询将传 offset,pageSize,lastRows 
		三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现 -->
	<select id="searchGrid" resultType="cn.cf.dto.B2bOrderGoodsDto"
		parameterType="java.util.Map">
		SELECT
		<include refid="columns" />
		FROM b2b_order_goods
		<include refid="searchGridWhere" />
	</select>
	<select id="searchList" resultType="cn.cf.dto.B2bOrderGoodsDto"
		parameterType="java.util.Map">
		SELECT
		<include refid="columns" />
		FROM b2b_order_goods
		<include refid="searchGridWhere" />
	</select>
	<select id="getByOrderNumber" resultType="cn.cf.dto.B2bOrderGoodsDto"
		parameterType="java.lang.String">
		SELECT
		<include refid="columns" />
		FROM b2b_order_goods where orderNumber = #{orderNumber}	</select>
	<select id="getByGoodsPk" resultType="cn.cf.dto.B2bOrderGoodsDto"
		parameterType="java.lang.String">
		SELECT
		<include refid="columns" />
		FROM b2b_order_goods where goodsPk = #{goodsPk}	</select>
	<select id="getByChildOrderNumber" resultType="cn.cf.dto.B2bOrderGoodsDto"
		parameterType="java.lang.String">
		SELECT
		<include refid="columns" />
		FROM b2b_order_goods where childOrderNumber = #{childOrderNumber}	</select>
	<select id="getByLogisticsPk" resultType="cn.cf.dto.B2bOrderGoodsDto"
		parameterType="java.lang.String">
		SELECT
		<include refid="columns" />
		FROM b2b_order_goods where logisticsPk = #{logisticsPk}	</select>
	<select id="getByLogisticsStepInfoPk" resultType="cn.cf.dto.B2bOrderGoodsDto"
		parameterType="java.lang.String">
		SELECT
		<include refid="columns" />
		FROM b2b_order_goods where logisticsStepInfoPk = #{logisticsStepInfoPk}	</select>
	<select id="getByLogisticsCarrierPk" resultType="cn.cf.dto.B2bOrderGoodsDto"
		parameterType="java.lang.String">
		SELECT
		<include refid="columns" />
		FROM b2b_order_goods where logisticsCarrierPk = #{logisticsCarrierPk}	</select>
	<select id="getByLogisticsCarrierName" resultType="cn.cf.dto.B2bOrderGoodsDto"
		parameterType="java.lang.String">
		SELECT
		<include refid="columns" />
		FROM b2b_order_goods where logisticsCarrierName = #{logisticsCarrierName}	</select>
	<select id="getByGoodsType" resultType="cn.cf.dto.B2bOrderGoodsDto"
		parameterType="java.lang.String">
		SELECT
		<include refid="columns" />
		FROM b2b_order_goods where goodsType = #{goodsType}	</select>
	<select id="getByGoodsInfo" resultType="cn.cf.dto.B2bOrderGoodsDto"
		parameterType="java.lang.String">
		SELECT
		<include refid="columns" />
		FROM b2b_order_goods where goodsInfo = #{goodsInfo}	</select>
	<select id="getByChildContractNo" resultType="cn.cf.dto.B2bOrderGoodsDto"
		parameterType="java.lang.String">
		SELECT
		<include refid="columns" />
		FROM b2b_order_goods where childContractNo = #{childContractNo}	</select>
</mapper>

