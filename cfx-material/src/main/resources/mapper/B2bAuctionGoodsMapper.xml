<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >


<!-- 不使用namespace的话sql搜索定位会比较方便 -->
<mapper namespace="cn.cf.dao.B2bAuctionGoodsDao">


	<!-- 用于select查询公用抽取的列 -->
	<sql id="columns">
	    <![CDATA[
		pk,goodsPk,activityTime,auctionPk,startingPrice,maximumPrice,minimumBoxes,startTime,endTime,companyPk,companyName,storePk,storeName,isDelete,insertTime
	    ]]>
	</sql>

	<insert id="insert" useGeneratedKeys="true"
		keyProperty="pk">
    <![CDATA[
        INSERT INTO b2b_auction_goods (
         pk, goodsPk, activityTime, auctionPk, startingPrice, maximumPrice, minimumBoxes, startTime, endTime, companyPk, companyName, storePk, storeName, isDelete,insertTime
        ) VALUES (
         #{pk}, #{goodsPk}, #{activityTime}, #{auctionPk}, #{startingPrice}, #{maximumPrice}, #{minimumBoxes}, #{startTime}, #{endTime}, #{companyPk}, #{companyName}, #{storePk}, #{storeName}, #{isDelete}  ,#{insertTime}       
        )
    ]]>
	</insert>

	<update id="update" parameterType="cn.cf.model.B2bAuctionGoods">
    <![CDATA[
        UPDATE b2b_auction_goods SET
	        goodsPk = #{goodsPk} , activityTime = #{activityTime} , auctionPk = #{auctionPk} , startingPrice = #{startingPrice} , maximumPrice = #{maximumPrice} , minimumBoxes = #{minimumBoxes} , startTime = #{startTime} , endTime = #{endTime} , companyPk = #{companyPk} , companyName = #{companyName} , storePk = #{storePk} , storeName = #{storeName} , isDelete = #{isDelete}  
        WHERE 
        	pk = #{pk}  	        
    ]]>
	</update>

	<delete id="delete" parameterType="cn.cf.model.B2bAuctionGoods">
    <![CDATA[
        DELETE FROM b2b_auction_goods WHERE
        pk = #{id} 
    ]]>
	</delete>

	<sql id="searchGridWhere">
		<!-- ognl访问静态方法的表达式 为@class@method(args),以下为调用rapid中的Ognl.isNotEmpty()方法,还有其它方法如isNotBlank()可以使用，具体请查看Ognl类 -->
		<where>
			<if test="@Ognl@isNotEmpty(pk)">
				AND pk = #{pk}			</if>
			<if test="@Ognl@isNotEmpty(goodsPk)">
				AND goodsPk = #{goodsPk}			</if>
			<if test="@Ognl@isNotEmpty(activityTimeBegin)">
				AND activityTime >= #{activityTimeBegin}			</if>
			<if test="@Ognl@isNotEmpty(activityTimeEnd)">
				AND activityTime &lt;= #{activityTimeEnd}			</if>
			<if test="@Ognl@isNotEmpty(auctionPk)">
				AND auctionPk = #{auctionPk}			</if>
			<if test="@Ognl@isNotEmpty(startingPrice)">
				AND startingPrice = #{startingPrice}			</if>
			<if test="@Ognl@isNotEmpty(maximumPrice)">
				AND maximumPrice = #{maximumPrice}			</if>
			<if test="@Ognl@isNotEmpty(minimumBoxes)">
				AND minimumBoxes = #{minimumBoxes}			</if>
			<if test="@Ognl@isNotEmpty(startTime)">
				AND startTime = #{startTime}			</if>
			<if test="@Ognl@isNotEmpty(endTime)">
				AND endTime = #{endTime}			</if>
			<if test="@Ognl@isNotEmpty(companyPk)">
				AND companyPk = #{companyPk}			</if>
			<if test="@Ognl@isNotEmpty(companyName)">
				AND companyName = #{companyName}			</if>
			<if test="@Ognl@isNotEmpty(storePk)">
				AND storePk = #{storePk}			</if>
			<if test="@Ognl@isNotEmpty(storeName)">
				AND storeName = #{storeName}			</if>
			<if test="@Ognl@isNotEmpty(isDelete)">
				AND isDelete = #{isDelete}			</if>
		</where>
	</sql>

	<select id="searchGridCount" parameterType="java.util.Map"
		resultType="int">
		SELECT count(*) FROM b2b_auction_goods
		<include refid="searchGridWhere" />
	</select>

	<!-- 分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页 因为分页查询将传 offset,pageSize,lastRows 
		三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现 -->
	<select id="searchGrid" resultType="cn.cf.dto.B2bAuctionGoodsDto"
		parameterType="java.util.Map">
		SELECT
		<include refid="columns" />
		FROM b2b_auction_goods
		<include refid="searchGridWhere" />
	</select>
	<select id="searchList" resultType="cn.cf.dto.B2bAuctionGoodsDto"
		parameterType="java.util.Map">
		SELECT
		<include refid="columns" />
		FROM b2b_auction_goods
		<include refid="searchGridWhere" />
	</select>
	<select id="getByPk" resultType="cn.cf.dto.B2bAuctionGoodsDto"
		parameterType="java.lang.String">
		SELECT
		<include refid="columns" />
		FROM b2b_auction_goods where pk = #{pk}	</select>
	<select id="getByGoodsPk" resultType="cn.cf.dto.B2bAuctionGoodsDto"
		parameterType="java.lang.String">
		SELECT
		<include refid="columns" />
		FROM b2b_auction_goods where goodsPk = #{goodsPk}	</select>
	<select id="getByAuctionPk" resultType="cn.cf.dto.B2bAuctionGoodsDto"
		parameterType="java.lang.String">
		SELECT
		<include refid="columns" />
		FROM b2b_auction_goods where auctionPk = #{auctionPk}	</select>
	<select id="getByStartTime" resultType="cn.cf.dto.B2bAuctionGoodsDto"
		parameterType="java.lang.String">
		SELECT
		<include refid="columns" />
		FROM b2b_auction_goods where startTime = #{startTime}	</select>
	<select id="getByEndTime" resultType="cn.cf.dto.B2bAuctionGoodsDto"
		parameterType="java.lang.String">
		SELECT
		<include refid="columns" />
		FROM b2b_auction_goods where endTime = #{endTime}	</select>
	<select id="getByCompanyPk" resultType="cn.cf.dto.B2bAuctionGoodsDto"
		parameterType="java.lang.String">
		SELECT
		<include refid="columns" />
		FROM b2b_auction_goods where companyPk = #{companyPk}	</select>
	<select id="getByCompanyName" resultType="cn.cf.dto.B2bAuctionGoodsDto"
		parameterType="java.lang.String">
		SELECT
		<include refid="columns" />
		FROM b2b_auction_goods where companyName = #{companyName}	</select>
	<select id="getByStorePk" resultType="cn.cf.dto.B2bAuctionGoodsDto"
		parameterType="java.lang.String">
		SELECT
		<include refid="columns" />
		FROM b2b_auction_goods where storePk = #{storePk}	</select>
	<select id="getByStoreName" resultType="cn.cf.dto.B2bAuctionGoodsDto"
		parameterType="java.lang.String">
		SELECT
		<include refid="columns" />
		FROM b2b_auction_goods where storeName = #{storeName}	</select>
</mapper>

