<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >


<!-- 不使用namespace的话sql搜索定位会比较方便 -->
<mapper namespace="cn.cf.dao.B2bGoodsBrandDao">


	<!-- 用于select查询公用抽取的列 -->
	<sql id="columns">
	    <![CDATA[
		pk,brandName,brandPk,storePk,storeName,insertTime,isDelete,auditStatus,auditTime,auditPk, addMemberPk,shortName

	    ]]>
	</sql>

	<insert id="insert" useGeneratedKeys="true" keyProperty="pk">
    <![CDATA[
        INSERT INTO b2b_goods_brand (
         pk,brandName,brandPk,storePk,storeName,insertTime,isDelete,auditStatus, addMemberPk,shortName
        ) VALUES (
         #{pk},#{brandName},#{brandPk},#{storePk},#{storeName},now(),1,1, #{addMemberPk},#{shortName}

        )
    ]]>
	</insert>

	<update id="update" parameterType="cn.cf.model.B2bGoodsBrand">
		UPDATE b2b_goods_brand
		<set>
			<if test="@Ognl@isNotEmpty(brandName)">
				brandName = #{brandName} ,
			</if>
			<if test="@Ognl@isNotEmpty(brandPk)">
				brandPk = #{brandPk} ,
			</if>
			<if test="@Ognl@isNotEmpty(storePk)">
				storePk = #{storePk} ,
			</if>
			<if test="@Ognl@isNotEmpty(storeName)">
				storeName = #{storeName} ,
			</if>
			<if test="@Ognl@isNotEmpty(isDelete)">
				isDelete = #{isDelete} ,
			</if>
			<if test="@Ognl@isNotEmpty(shortName)">
				shortName = #{shortName} ,
			</if>
		</set>
		WHERE
		pk = #{pk}
	</update>

	<delete id="delete" parameterType="cn.cf.model.B2bGoodsBrand">
    <![CDATA[
        DELETE FROM b2b_goods_brand WHERE
        pk = #{id} 
    ]]>
	</delete>

	<sql id="searchGridWhere">
		<!-- ognl访问静态方法的表达式 为@class@method(args),以下为调用rapid中的Ognl.isNotEmpty()方法,还有其它方法如isNotBlank()可以使用，具体请查看Ognl类 -->
		<where>
			<if test="@Ognl@isNotEmpty(pk)">
				AND pk = #{pk}
			</if>
			<if test="brandName != null">
				AND BINARY brandName = #{brandName}
			</if>
			<if test="@Ognl@isNotEmpty(brandPk)">
				AND brandPk = #{brandPk}
			</if>
			<if test="@Ognl@isNotEmpty(storePk)">
				AND storePk = #{storePk}
			</if>
			<if test="@Ognl@isNotEmpty(storeName)">
				AND storeName = #{storeName}
			</if>
			<if test="@Ognl@isNotEmpty(insertTimeBegin)">
				AND insertTime >= #{insertTimeBegin}
			</if>
			<if test="@Ognl@isNotEmpty(insertTimeEnd)">
				AND insertTime &lt;= #{insertTimeEnd}			</if>
			<if test="@Ognl@isNotEmpty(isDelete)">
				AND isDelete = #{isDelete}
			</if>
			<if test="@Ognl@isNotEmpty(auditStatus)">
				AND auditStatus = #{auditStatus}
			</if>
			<if test="@Ognl@isNotEmpty(auditTimeBegin)">
				AND auditTime >= #{auditTimeBegin}
			</if>
			<if test="@Ognl@isNotEmpty(auditTimeEnd)">
				AND auditTime &lt;= #{auditTimeEnd}			</if>
			<if test="@Ognl@isNotEmpty(auditPk)">
				AND auditPk = #{auditPk}
			</if>
			<if test="@Ognl@isNotEmpty(shortName)">
				AND shortName = #{shortName}
			</if>
		</where>
	</sql>

	<select id="searchGridCount" parameterType="java.util.Map"
		resultType="int">
		SELECT count(*) FROM b2b_goods_brand
		<include refid="searchGridWhere" />
	</select>

	<!-- 分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页 因为分页查询将传 offset,pageSize,lastRows 
		三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现 -->
	<select id="searchGrid" resultType="cn.cf.dto.B2bGoodsBrandDto"
		parameterType="java.util.Map">
		SELECT
		<include refid="columns" />
		FROM b2b_goods_brand
		<include refid="searchGridWhere" />
		<if test="orderName != null">
			order by ${orderName} ${orderType}
		</if>
		<if test="limit != null">
			limit #{start},#{limit}
		</if>
	</select>
	<select id="searchList" resultType="cn.cf.dto.B2bGoodsBrandDto"
		parameterType="java.util.Map">
		SELECT
		<include refid="columns" />
		FROM b2b_goods_brand
		<include refid="searchGridWhere" />
	</select>
	<select id="getByPk" resultType="cn.cf.dto.B2bGoodsBrandDto"
		parameterType="java.lang.String">
		SELECT
		<include refid="columns" />
		FROM b2b_goods_brand where pk = #{pk}
	</select>
	<select id="getByBrandName" resultType="cn.cf.dto.B2bGoodsBrandDto"
		parameterType="java.lang.String">
		SELECT
		<include refid="columns" />
		FROM b2b_goods_brand where brandName = #{brandName}
	</select>
	<select id="getByBrandPk" resultType="cn.cf.dto.B2bGoodsBrandDto"
		parameterType="java.lang.String">
		SELECT
		<include refid="columns" />
		FROM b2b_goods_brand where brandPk = #{brandPk}
	</select>
	<select id="getByStorePk" resultType="cn.cf.dto.B2bGoodsBrandDto"
		parameterType="java.lang.String">
		SELECT
		<include refid="columns" />
		FROM b2b_goods_brand where storePk = #{storePk}
	</select>
	<select id="getByStoreName" resultType="cn.cf.dto.B2bGoodsBrandDto"
		parameterType="java.lang.String">
		SELECT
		<include refid="columns" />
		FROM b2b_goods_brand where storeName = #{storeName}
	</select>
	<select id="getByAuditPk" resultType="cn.cf.dto.B2bGoodsBrandDto"
		parameterType="java.lang.String">
		SELECT
		<include refid="columns" />
		FROM b2b_goods_brand where auditPk = #{auditPk}
	</select>
</mapper>

