<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >


<!-- 不使用namespace的话sql搜索定位会比较方便 -->
<mapper namespace="cn.cf.dao.LgMemberDao">


	<!-- 用于select查询公用抽取的列 -->
	<sql id="columns">
	    <![CDATA[
		pk,companyPk,mobile,password,companyName,insertTime,isDelete,
		auditStatus,updateTime,remember_token,loginTime,headPortrait,parantPk,isVisable
	    ]]>
	</sql>
	<insert id="insert" useGeneratedKeys="true"
		keyProperty="pk">
    <![CDATA[
        INSERT INTO lg_member (
         pk, companyPk, mobile, password, companyName, 
         insertTime, isDelete, auditStatus, updateTime, 
         remember_token, loginTime, headPortrait,parantPk,isVisable
        ) VALUES (
         #{pk}, #{companyPk}, #{mobile}, #{password}, #{companyName}, 
         now(), 1,1, now(), 
         #{rememberToken}, #{loginTime}, #{headPortrait},#{parantPk}  ,1      
        )
    ]]>
	</insert> 
	

	
	<update id="delete" parameterType="cn.cf.model.LgMember">
        update  lg_member  set isDelete =2 ,updateTime = now() where pk= #{pk}
	</update>

	<sql id="searchGridWhere">
		<!-- ognl访问静态方法的表达式 为@class@method(args),以下为调用rapid中的Ognl.isNotEmpty()方法,还有其它方法如isNotBlank()可以使用，具体请查看Ognl类 -->
		<where>
			<if test="@Ognl@isNotEmpty(pk)">
				AND pk = #{pk}			</if>
			<if test="@Ognl@isNotEmpty(companyPk)">
				AND companyPk = #{companyPk}			</if>
			<if test="@Ognl@isNotEmpty(mobile)">
				AND mobile = #{mobile}			</if>
			<if test="@Ognl@isNotEmpty(password)">
				AND password = #{password}			</if>
			<if test="@Ognl@isNotEmpty(companyName)">
				AND companyName = #{companyName}			</if>
			<if test="@Ognl@isNotEmpty(insertTimeBegin)">
				AND insertTime >= #{insertTimeBegin}			</if>
			<if test="@Ognl@isNotEmpty(insertTimeEnd)">
				AND insertTime &lt;= #{insertTimeEnd}			</if>
			<if test="@Ognl@isNotEmpty(isDelete)">
				AND isDelete = #{isDelete}			</if>
				<if test="@Ognl@isNotEmpty(isVisable)">
				AND isVisable = #{isVisable}			</if>
			<if test="@Ognl@isNotEmpty(auditStatus)">
				AND auditStatus = #{auditStatus}			</if>
			<if test="@Ognl@isNotEmpty(updateTimeBegin)">
				AND updateTime >= #{updateTimeBegin}			</if>
			<if test="@Ognl@isNotEmpty(updateTimeEnd)">
				AND updateTime &lt;= #{updateTimeEnd}			</if>
			<if test="@Ognl@isNotEmpty(rememberToken)">
				AND remember_token = #{rememberToken}			</if>
			<if test="@Ognl@isNotEmpty(loginTimeBegin)">
				AND loginTime >= #{loginTimeBegin}			</if>
			<if test="@Ognl@isNotEmpty(loginTimeEnd)">
				AND loginTime &lt;= #{loginTimeEnd}			</if>
			<if test="@Ognl@isNotEmpty(headPortrait)">
				AND headPortrait = #{headPortrait}			</if>
		</where>
	</sql>

	<select id="searchGridCount" parameterType="java.util.Map"
		resultType="int">
		SELECT count(*) FROM lg_member
		<include refid="searchGridWhere" />
	</select>

	<!-- 分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页 因为分页查询将传 offset,pageSize,lastRows 
		三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现 -->
	<select id="searchGrid" resultType="cn.cf.dto.LgMemberDto"
		parameterType="java.util.Map">
		SELECT
		<include refid="columns" />
		FROM lg_member
		<include refid="searchGridWhere" />
	</select>
	<select id="searchList" resultType="cn.cf.dto.LgMemberDto"
		parameterType="java.util.Map">
		SELECT
		<include refid="columns" />
		FROM lg_member
		<include refid="searchGridWhere" />
	</select>
	<select id="getByPk" resultType="cn.cf.dto.LgMemberDto"
		parameterType="java.lang.String">
		SELECT
		<include refid="columns" />
		FROM lg_member where pk = #{pk}	</select>
	<select id="getByCompanyPk" resultType="cn.cf.dto.LgMemberDto"
		parameterType="java.lang.String">
		SELECT
		<include refid="columns" />
		FROM lg_member where companyPk = #{companyPk}	</select>
	<select id="getByPassword" resultType="cn.cf.dto.LgMemberDto"
		parameterType="java.lang.String">
		SELECT
		<include refid="columns" />
		FROM lg_member where password = #{password}	</select>
	<select id="getByCompanyName" resultType="cn.cf.dto.LgMemberDto"
		parameterType="java.lang.String">
		SELECT
		<include refid="columns" />
		FROM lg_member where companyName = #{companyName}	</select>
	<select id="getByRememberToken" resultType="cn.cf.dto.LgMemberDto"
		parameterType="java.lang.String">
		SELECT
		<include refid="columns" />
		FROM lg_member where remember_token = #{rememberToken}	</select>
	<select id="getByHeadPortrait" resultType="cn.cf.dto.LgMemberDto"
		parameterType="java.lang.String">
		SELECT
		<include refid="columns" />
		FROM lg_member where headPortrait = #{headPortrait}	</select>
</mapper>

