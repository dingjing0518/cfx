<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >


<!-- 不使用namespace的话sql搜索定位会比较方便 -->
<mapper namespace="cn.cf.dao.MarketingPersonnelDao">


	<!-- 用于select查询公用抽取的列 -->
	<sql id="columns">
	    <![CDATA[
		pk,type,insertTime,accountPk,accountName,isDelete,isVisable,regionPk,updateTime
	    ]]>
	</sql>

	<insert id="insert" useGeneratedKeys="true"
		keyProperty="pk">
    <![CDATA[
        INSERT INTO marketing_personnel (
         pk, type, insertTime, accountPk, accountName, isDelete, isVisable,regionPk,updateTime
        ) VALUES (
         #{pk}, #{type}, #{insertTime}, #{accountPk}, #{accountName}, #{isDelete}, #{isVisable}  ,#{regionPk} ,#{updateTime}
        )
    ]]>
	</insert>

	<update id="update" parameterType="cn.cf.model.MarketingPersonnel">
        UPDATE marketing_personnel
        <set>
        	<if test="type != null and type !=''">
        		type = #{type} ,
        	</if>
        	<if test="insertTime != null">
        		insertTime = #{insertTime} ,
        	</if>
        	<if test="accountPk != null and accountPk !=''">
        		accountPk = #{accountPk} ,
        	</if>
        	<if test="accountName != null and accountName !=''">
        		accountName = #{accountName} ,
        	</if>
        	<if test="isDelete != null and isDelete !=''">
        		isDelete = #{isDelete} ,
        	</if>
        	<if test="isVisable != null and isVisable !=''">
        		isVisable = #{isVisable} ,
        	</if>
        	<if test="regionPk != null and regionPk !=''">
                regionPk = #{regionPk} ,
            </if>
        </set>
        WHERE 
        	pk = #{pk}  	        
	</update>


	<delete id="delete" parameterType="cn.cf.model.MarketingPersonnel">
    <![CDATA[
        DELETE FROM marketing_personnel WHERE
        pk = #{id} 
    ]]>
	</delete>

	<sql id="searchGridWhere">
		<!-- ognl访问静态方法的表达式 为@class@method(args),以下为调用rapid中的Ognl.isNotEmpty()方法,还有其它方法如isNotBlank()可以使用，具体请查看Ognl类 -->
		<where>
			<if test="@Ognl@isNotEmpty(pk)">
				AND pk = #{pk}			</if>
			<if test="@Ognl@isNotEmpty(type)">
				AND type = #{type}			</if>
			<if test="@Ognl@isNotEmpty(insertTimeBegin)">
				AND insertTime >= #{insertTimeBegin}			</if>
			<if test="@Ognl@isNotEmpty(insertTimeEnd)">
				AND insertTime &lt;= #{insertTimeEnd}			</if>
			<if test="@Ognl@isNotEmpty(accountPk)">
				AND accountPk = #{accountPk}			</if>
			<if test="@Ognl@isNotEmpty(accountName)">
				AND accountName = #{accountName}			</if>
			<if test="@Ognl@isNotEmpty(isDelete)">
				AND isDelete = #{isDelete}			</if>
			<if test="@Ognl@isNotEmpty(isVisable)">
				AND isVisable = #{isVisable}			</if>
				<if test="@Ognl@isNotEmpty(regionPk)">
                AND regionPk = #{regionPk}            </if>
		</where>
	</sql>

	<select id="searchGridCount" parameterType="java.util.Map"
		resultType="int">
		SELECT count(*) FROM marketing_personnel
		<include refid="searchGridWhere" />
	</select>

	<!-- 分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页 因为分页查询将传 offset,pageSize,lastRows 
		三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现 -->
	<select id="searchGrid" resultType="cn.cf.dto.MarketingPersonnelDto"
		parameterType="java.util.Map">
		SELECT
		<include refid="columns" />
		FROM marketing_personnel
		<include refid="searchGridWhere" />
		<if test="orderName != null">
			order by ${orderName} ${orderType}
		</if>
		<if test="limit != null">
			limit #{start},#{limit}
		</if>
	</select>
	<select id="searchList" resultType="cn.cf.dto.MarketingPersonnelDto"
		parameterType="java.util.Map">
		SELECT
		<include refid="columns" />
		FROM marketing_personnel
		<include refid="searchGridWhere" />
	</select>
	<select id="getByPk" resultType="cn.cf.dto.MarketingPersonnelDto"
		parameterType="java.lang.String">
		SELECT
		<include refid="columns" />
		FROM marketing_personnel where pk = #{pk}	</select>
	<select id="getByAccountPk" resultType="cn.cf.dto.MarketingPersonnelDto"
		parameterType="java.lang.String">
		SELECT
		<include refid="columns" />
		FROM marketing_personnel where accountPk = #{accountPk}	</select>
	<select id="getByAccountName" resultType="cn.cf.dto.MarketingPersonnelDto"
		parameterType="java.lang.String">
		SELECT
		<include refid="columns" />
		FROM marketing_personnel where accountName = #{accountName}	</select>
</mapper>

