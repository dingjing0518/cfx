<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >


<!-- 不使用namespace的话sql搜索定位会比较方便 -->
<mapper namespace="cn.cf.dao.B2bGoodsDao">


	<!-- 用于select查询公用抽取的列 -->
	<sql id="columns">
	    <![CDATA[
		pk,price,tonPrice,salePrice,storePk,storeName,companyPk,companyName,brandPk,brandName,insertTime,isUpdown,updateTime,upTime,tareWeight,totalBoxes,totalWeight,type,isDelete,isNewProduct,block,REPLACE (REPLACE (REPLACE (goodsInfo, ',', ','),CHAR (13),''),CHAR (10),'') as goodsInfo,pk1,pk2,pk3,pk4 
	    ]]>
	</sql>

	<insert id="insert" useGeneratedKeys="true"
		keyProperty="pk">
    <![CDATA[
        INSERT INTO b2b_goods (
         pk, price, tonPrice, salePrice, storePk, storeName, companyPk, companyName, brandPk, brandName, insertTime, isUpdown, updateTime, upTime, tareWeight, totalBoxes, totalWeight, type, isDelete, isNewProduct, block, goodsInfo, pk1, pk2, pk3, pk4 
        ) VALUES (
         #{pk}, #{price}, #{tonPrice}, #{salePrice}, #{storePk}, #{storeName}, #{companyPk}, #{companyName}, #{brandPk}, #{brandName}, #{insertTime}, #{isUpdown}, #{updateTime}, #{upTime}, #{tareWeight}, #{totalBoxes}, #{totalWeight}, #{type}, #{isDelete}, #{isNewProduct}, #{block}, #{goodsInfo}, #{pk1}, #{pk2}, #{pk3}, #{pk4}   
        )
    ]]>
	</insert>

	<update id="update" parameterType="cn.cf.model.B2bGoods">
    <![CDATA[
        UPDATE b2b_goods SET
	        price = #{price} , tonPrice = #{tonPrice} , salePrice = #{salePrice} , storePk = #{storePk} , storeName = #{storeName} , companyPk = #{companyPk} , companyName = #{companyName} , brandPk = #{brandPk} , brandName = #{brandName} , insertTime = #{insertTime} , isUpdown = #{isUpdown} , updateTime = #{updateTime} , upTime = #{upTime} , tareWeight = #{tareWeight} , totalBoxes = #{totalBoxes} , totalWeight = #{totalWeight} , type = #{type} , isDelete = #{isDelete} , isNewProduct = #{isNewProduct} , block = #{block} , goodsInfo = #{goodsInfo} , pk1 = #{pk1} , pk2 = #{pk2} , pk3 = #{pk3} , pk4 = #{pk4}  
        WHERE 
        	pk = #{pk}  	        
    ]]>
	</update>

	<delete id="delete" parameterType="cn.cf.model.B2bGoods">
    <![CDATA[
        DELETE FROM b2b_goods WHERE
        pk = #{id} 
    ]]>
	</delete>

	<sql id="searchGridWhere">
		<!-- ognl访问静态方法的表达式 为@class@method(args),以下为调用rapid中的Ognl.isNotEmpty()方法,还有其它方法如isNotBlank()可以使用，具体请查看Ognl类 -->
		<where>
			<if test="@Ognl@isNotEmpty(pk)">
				AND pk = #{pk}			</if>
			<if test="@Ognl@isNotEmpty(price)">
				AND price = #{price}			</if>
			<if test="@Ognl@isNotEmpty(tonPrice)">
				AND tonPrice = #{tonPrice}			</if>
			<if test="@Ognl@isNotEmpty(salePrice)">
				AND salePrice = #{salePrice}			</if>
			<if test="@Ognl@isNotEmpty(storePk)">
				AND storePk = #{storePk}			</if>
			<if test="@Ognl@isNotEmpty(storeName)">
				AND storeName = #{storeName}			</if>
			<if test="@Ognl@isNotEmpty(companyPk)">
				AND companyPk = #{companyPk}			</if>
			<if test="@Ognl@isNotEmpty(companyName)">
				AND companyName = #{companyName}			</if>
			<if test="@Ognl@isNotEmpty(brandPk)">
				AND brandPk = #{brandPk}			</if>
			<if test="@Ognl@isNotEmpty(brandName)">
				AND brandName = #{brandName}			</if>
			<if test="@Ognl@isNotEmpty(insertTimeBegin)">
				AND insertTime >= #{insertTimeBegin}			</if>
			<if test="@Ognl@isNotEmpty(insertTimeEnd)">
				AND insertTime &lt;= #{insertTimeEnd}			</if>
			<if test="@Ognl@isNotEmpty(isUpdown)">
				AND isUpdown = #{isUpdown}			</if>
			<if test="@Ognl@isNotEmpty(updateTimeBegin)">
				AND updateTime >= #{updateTimeBegin}			</if>
			<if test="@Ognl@isNotEmpty(updateTimeEnd)">
				AND updateTime &lt;= #{updateTimeEnd}			</if>
			<if test="@Ognl@isNotEmpty(upTimeBegin)">
				AND upTime >= #{upTimeBegin}			</if>
			<if test="@Ognl@isNotEmpty(upTimeEnd)">
				AND upTime &lt;= #{upTimeEnd}			</if>
			<if test="@Ognl@isNotEmpty(tareWeight)">
				AND tareWeight = #{tareWeight}			</if>
			<if test="@Ognl@isNotEmpty(totalBoxes)">
				AND totalBoxes = #{totalBoxes}			</if>
			<if test="@Ognl@isNotEmpty(totalWeight)">
				AND totalWeight = #{totalWeight}			</if>
			<if test="@Ognl@isNotEmpty(type)">
				AND type = #{type}			</if>
			<if test="@Ognl@isNotEmpty(isDelete)">
				AND isDelete = #{isDelete}			</if>
			<if test="@Ognl@isNotEmpty(isNewProduct)">
				AND isNewProduct = #{isNewProduct}			</if>
			<if test="@Ognl@isNotEmpty(block)">
				AND block = #{block}			</if>
			<if test="@Ognl@isNotEmpty(goodsInfo)">
				AND goodsInfo = #{goodsInfo}			</if>
			<if test="certificatePk != null and certificatePk !=''">
				and FIND_IN_SET('"certificatePk":"${certificatePk}"',goodsInfo)
			</if>
			<if test="@Ognl@isNotEmpty(pk1)">
				AND pk1 = #{pk1}			</if>
			<if test="@Ognl@isNotEmpty(pk2)">
				AND pk2 = #{pk2}			</if>
			<if test="@Ognl@isNotEmpty(pk3)">
				AND pk3 = #{pk3}			</if>
			<if test="@Ognl@isNotEmpty(pk4)">
				AND pk4 = #{pk4}			</if>
			 
		</where>
	</sql>

	<select id="searchGridCount" parameterType="java.util.Map"
		resultType="int">
		SELECT count(*) FROM b2b_goods
		<include refid="searchGridWhere" />
	</select>

	<!-- 分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页 因为分页查询将传 offset,pageSize,lastRows 
		三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现 -->
	<select id="searchGrid" resultType="cn.cf.dto.B2bGoodsDto"
		parameterType="java.util.Map">
		SELECT
		<include refid="columns" />
		FROM b2b_goods
		<include refid="searchGridWhere" />
	</select>
	<select id="searchList" resultType="cn.cf.dto.B2bGoodsDto"
		parameterType="java.util.Map">
		SELECT
		<include refid="columns" />
		FROM b2b_goods
		<include refid="searchGridWhere" />
	</select>
	<select id="getByPk" resultType="cn.cf.dto.B2bGoodsDto"
		parameterType="java.lang.String">
		SELECT
		<include refid="columns" />
		FROM b2b_goods where pk = #{pk}	</select>
	<select id="getByStorePk" resultType="cn.cf.dto.B2bGoodsDto"
		parameterType="java.lang.String">
		SELECT
		<include refid="columns" />
		FROM b2b_goods where storePk = #{storePk}	</select>
	<select id="getByStoreName" resultType="cn.cf.dto.B2bGoodsDto"
		parameterType="java.lang.String">
		SELECT
		<include refid="columns" />
		FROM b2b_goods where storeName = #{storeName}	</select>
	<select id="getByCompanyPk" resultType="cn.cf.dto.B2bGoodsDto"
		parameterType="java.lang.String">
		SELECT
		<include refid="columns" />
		FROM b2b_goods where companyPk = #{companyPk}	</select>
	<select id="getByCompanyName" resultType="cn.cf.dto.B2bGoodsDto"
		parameterType="java.lang.String">
		SELECT
		<include refid="columns" />
		FROM b2b_goods where companyName = #{companyName}	</select>
	<select id="getByBrandPk" resultType="cn.cf.dto.B2bGoodsDto"
		parameterType="java.lang.String">
		SELECT
		<include refid="columns" />
		FROM b2b_goods where brandPk = #{brandPk}	</select>
	<select id="getByBrandName" resultType="cn.cf.dto.B2bGoodsDto"
		parameterType="java.lang.String">
		SELECT
		<include refid="columns" />
		FROM b2b_goods where brandName = #{brandName}	</select>
	<select id="getByType" resultType="cn.cf.dto.B2bGoodsDto"
		parameterType="java.lang.String">
		SELECT
		<include refid="columns" />
		FROM b2b_goods where type = #{type}	</select>
	<select id="getByBlock" resultType="cn.cf.dto.B2bGoodsDto"
		parameterType="java.lang.String">
		SELECT
		<include refid="columns" />
		FROM b2b_goods where block = #{block}	</select>
	<select id="getByGoodsInfo" resultType="cn.cf.dto.B2bGoodsDto"
		parameterType="java.lang.String">
		SELECT
		<include refid="columns" />
		FROM b2b_goods where goodsInfo = #{goodsInfo}	</select>
	<select id="getByPk1" resultType="cn.cf.dto.B2bGoodsDto"
		parameterType="java.lang.String">
		SELECT
		<include refid="columns" />
		FROM b2b_goods where pk1 = #{pk1}	</select>
	<select id="getByPk2" resultType="cn.cf.dto.B2bGoodsDto"
		parameterType="java.lang.String">
		SELECT
		<include refid="columns" />
		FROM b2b_goods where pk2 = #{pk2}	</select>
	<select id="getByPk3" resultType="cn.cf.dto.B2bGoodsDto"
		parameterType="java.lang.String">
		SELECT
		<include refid="columns" />
		FROM b2b_goods where pk3 = #{pk3}	</select>
	<select id="getByPk4" resultType="cn.cf.dto.B2bGoodsDto"
		parameterType="java.lang.String">
		SELECT
		<include refid="columns" />
		FROM b2b_goods where pk4 = #{pk4}	</select>
</mapper>

