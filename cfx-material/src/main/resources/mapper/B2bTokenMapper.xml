<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >


<!-- 不使用namespace的话sql搜索定位会比较方便 -->
<mapper namespace="cn.cf.dao.B2bTokenDao">


	<!-- 用于select查询公用抽取的列 -->
	<sql id="columns">
	    <![CDATA[
		pk,appId,appSecret,storePk,storeName,isVisable,isDelete,tokenType,accType
	    ]]>
	</sql>

	<insert id="insert" useGeneratedKeys="true"
		keyProperty="pk">
    <![CDATA[
        INSERT INTO b2b_token (
         pk, appId, appSecret, storePk,storeName, isVisable, isDelete, tokenType, accType
        ) VALUES (
         #{pk}, #{appId}, #{appSecret}, #{storePk}, #{storeName}, #{isVisable}, #{isDelete}, #{tokenType},#{accType}        
        )
    ]]>
	</insert>

	<update id="update" parameterType="cn.cf.model.B2bToken">

        UPDATE b2b_token
         <set>
			<if test="appId != null and appId != ''">
				appId = #{appId},
			</if>
			<if test="appSecret != null and appSecret != ''">
				appSecret = #{appSecret},
			</if>
			<if test="storePk != null and storePk != ''">
				storePk = #{storePk},
			</if>
			<if test="storeName != null and storeName != ''">
				storeName = #{storeName},
			</if>
			<if test="isVisable != null and isVisable != ''">
				isVisable = #{isVisable},
			</if>
			<if test="isDelete != null and isDelete != ''">
				isDelete = #{isDelete},
			</if>
			<if test="accType != null and accType != ''">
				accType = #{accType}
			</if>
		</set>
       WHERE
        	pk = #{pk}  	        

	</update>

	<delete id="delete" parameterType="cn.cf.model.B2bToken">
    <![CDATA[
        DELETE FROM b2b_token WHERE
        pk = #{id} 
    ]]>
	</delete>

	<sql id="searchGridWhere">
		<!-- ognl访问静态方法的表达式 为@class@method(args),以下为调用rapid中的Ognl.isNotEmpty()方法,还有其它方法如isNotBlank()可以使用，具体请查看Ognl类 -->
		<where>
			<if test="@Ognl@isNotEmpty(pk)">
				AND pk = #{pk}			</if>
			<if test="@Ognl@isNotEmpty(appId)">
				AND appId = #{appId}			</if>
			<if test="@Ognl@isNotEmpty(appSecret)">
				AND appSecret = #{appSecret}			</if>
			<if test="@Ognl@isNotEmpty(storePk)">
				AND storePk = #{storePk}			</if>
			<if test="@Ognl@isNotEmpty(storeName)">
				AND storeName = #{storeName}			</if>
			<if test="@Ognl@isNotEmpty(isVisable)">
				AND isVisable = #{isVisable}			</if>
			<if test="@Ognl@isNotEmpty(isDelete)">
				AND isDelete = #{isDelete}			</if>
			<if test="@Ognl@isNotEmpty(tokenType)">
				AND tokenType = #{tokenType}			</if>
			<if test="@Ognl@isNotEmpty(accType)">
				AND accType = #{accType}			</if>


		</where>
	</sql>

	<select id="searchGridCount" parameterType="java.util.Map"
		resultType="int">
		SELECT count(*) FROM b2b_token
		<include refid="searchGridWhere" />
	</select>

	<!-- 分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页 因为分页查询将传 offset,pageSize,lastRows 
		三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现 -->
	<select id="searchGrid" resultType="cn.cf.dto.B2bTokenDto"
		parameterType="java.util.Map">
		SELECT
		<include refid="columns" />
		FROM b2b_token
		<include refid="searchGridWhere" />
		<if test="orderName != null">
			order by ${orderName} ${orderType}
		</if>
		<if test="limit != null and limit !=''">
			limit #{start},#{limit}
		</if>
	</select>
	<select id="searchList" resultType="cn.cf.dto.B2bTokenDto"
		parameterType="java.util.Map">
		SELECT
		<include refid="columns" />
		FROM b2b_token
		<include refid="searchGridWhere" />
		<if test="orderName != null">
			order by ${orderName} ${orderType}
		</if>
		<if test="limit != null">
			limit #{start},#{limit}
		</if>
	</select>
	<select id="getByPk" resultType="cn.cf.dto.B2bTokenDto"
		parameterType="java.lang.String">
		SELECT
		<include refid="columns" />
		FROM b2b_token where pk = #{pk}	</select>
	<select id="getByAppId" resultType="cn.cf.dto.B2bTokenDto"
		parameterType="java.lang.String">
		SELECT
		<include refid="columns" />
		FROM b2b_token where appId = #{appId}	</select>
	<select id="getByAppSecret" resultType="cn.cf.dto.B2bTokenDto"
		parameterType="java.lang.String">
		SELECT
		<include refid="columns" />
		FROM b2b_token where appSecret = #{appSecret}	</select>
	<select id="getByStorePk" resultType="cn.cf.dto.B2bTokenDto"
		parameterType="java.lang.String">
		SELECT
		<include refid="columns" />
		FROM b2b_token where storePk = #{storePk}	</select>
	<select id="getByStoreName" resultType="cn.cf.dto.B2bTokenDto"
		parameterType="java.lang.String">
		SELECT
		<include refid="columns" />
		FROM b2b_token where storeName = #{storeName}	</select>
	<select id="getByTokenType" resultType="cn.cf.dto.B2bTokenDto"
		parameterType="java.lang.String">
		SELECT
		<include refid="columns" />
		FROM b2b_token where tokenType = #{tokenType}	</select>
</mapper>

