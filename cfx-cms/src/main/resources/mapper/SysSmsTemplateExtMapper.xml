<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >


<!-- 不使用namespace的话sql搜索定位会比较方便 -->
<mapper namespace="cn.cf.dao.SysSmsTemplateExtDao">

	<!-- 用于select查询公用抽取的列 -->
	<sql id="columns">
		<![CDATA[
		templateCode,freeSignName,content,isSms,flag,isMail,type,name
	    ]]>
	</sql>


		<update id="update" parameterType="cn.cf.dto.SysSmsTemplateDto">
		UPDATE sys_sms_template
		<set>
			<if test="null!=isSms and ''!=isSms">
				isSms = #{isSms} ,
			</if>
			<if test="null!=isMail and ''!=isMail">
				isMail = #{isMail} ,
			</if>
			<if test="null!=flag  and ''!=flag">
				flag = #{flag},
			</if>
		</set>
		WHERE
		templateCode = #{templateCode}
	</update>

	<select id="getByNames" resultType="cn.cf.dto.SysSmsTemplateExtDto"
		parameterType="java.lang.String">
			SELECT
		templateCode, freeSignName, content, isSms, content as contentStr, isMail,flag,type
		FROM sys_sms_template where name = #{name}	  and isSms=1	 and isDelete=1
	</select>


	<sql id="searchGridWhere">
		<!-- ognl访问静态方法的表达式 为@class@method(args),以下为调用rapid中的Ognl.isNotEmpty()方法,还有其它方法如isNotBlank()可以使用，具体请查看Ognl类 -->
		<where>
			<if test="null!=templateCode and ''!=templateCode">
				AND templateCode = #{templateCode}
			</if>
			<if test="null!=freeSignName and ''!=freeSignName">
				AND freeSignName   like '%${freeSignName}%'
			</if>
			<if test="null!=content and ''!=content">
				AND content = #{content}
			</if>
			<if test="null!=isSms and ''!=isSms">
				AND isSms = #{isSms}
			</if>
			<if test="null!=isMail and ''!=isMail">
				AND isMail = #{isMail}

			</if>
			<if test="null!=flag  and ''!=flag">
				AND flag = #{flag}
			</if>
			<if test="null!=type and type!=''">

				AND type = #{type}

			</if>
			and isDelete=1
		</where>
	</sql>

	<select id="searchGridCount" parameterType="java.util.Map"
			resultType="int">
		SELECT count(*) FROM  sys_sms_template
		<include refid="searchGridWhere" />
	</select>

	<!-- 分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页 因为分页查询将传 offset,pageSize,lastRows
		三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现 -->
	<select id="searchGrid" resultType="cn.cf.dto.SysSmsTemplateDto"
			parameterType="java.util.Map">
		SELECT
		<include refid="columns" />
		FROM sys_sms_template
		<include refid="searchGridWhere" />
		<if test="limit != null and limit != ''">
			LIMIT #{start}, #{limit}
		</if>
	</select>
	<select id="searchList" resultType="cn.cf.dto.SysSmsTemplateDto"
			parameterType="java.util.Map">
		SELECT
		<include refid="columns" />
		FROM  sys_sms_template
		<include refid="searchGridWhere" />
		<if test="limit != null and limit != ''">
			LIMIT #{start}, #{limit}
		</if>
	</select>

</mapper>

