<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >


<!-- 不使用namespace的话sql搜索定位会比较方便 -->
<mapper namespace="cn.cf.dao.B2bBindDaoEx">

    <!-- 用于select查询公用抽取的列 -->
    <sql id="columns">
    <![CDATA[
		pk,bindName,bindProductID,bindProductCount,bindReason,bindProductDetails,bindProductPrice,
		storePk,updateTime,insertTime,status,isUpDown
        ]]>
	</sql>

    <sql id="searchGridWhere">
        <!-- ognl访问静态方法的表达式 为@class@method(args),以下为调用rapid中的Ognl.isNotEmpty()方法,还有其它方法如isNotBlank()可以使用，具体请查看Ognl类 -->
        <where>
            <if test="@Ognl@isNotEmpty(pk)">
                AND pk = #{pk}
            </if>
            <if test="bindName != null and bindName != ''">
                AND bindName like '%${bindName}%'
            </if>
            <if test="bindProductID != null and bindProductID != ''">
                AND bindProductID like '%${bindProductID}%'
            </if>
            <if test="@Ognl@isNotEmpty(bindProductCount)">
                AND bindProductCount = #{bindProductCount}
            </if>
            <if test="@Ognl@isNotEmpty(bindReason)">
                AND bindReason = #{bindReason}
            </if>
            <if test="@Ognl@isNotEmpty(bindProductDetails)">
                AND bindProductDetails = #{bindProductDetails}
            </if>
            <if test="@Ognl@isNotEmpty(bindProductPrice)">
                AND bindProductPrice = #{bindProductPrice}
            </if>
            <if test="storePk != null ">
                AND storePk = #{storePk}
            </if>
            <if test="@Ognl@isNotEmpty(updateTime)">
                AND updateTime = #{updateTime}
            </if>
            <if test="@Ognl@isNotEmpty(status)">
				AND status = #{status}
			</if>
            <if test="isUpDown != null ">
                <choose>
                    <!-- 全部 -->
                    <when test="isUpDown == 0">

                    </when>
                    <!-- 上架 -->
                    <when test="isUpDown == 1">
                        and isUpDown=1
                    </when>
                    <!-- 下架 -->
                    <when test="isUpDown == 2">
                        and isUpDown=2
                    </when>
                </choose>
            </if>

        </where>
    </sql>

    <!-- 分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页 因为分页查询将传 offset,pageSize,lastRows
        三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现 -->
    <select id="searchGridEx" resultType="cn.cf.dto.B2bBindDtoEx"
            parameterType="java.util.Map">
        SELECT
        b2b_bind.*,
       	CASE b2b_bind.status
		WHEN 0 THEN '未成团'
		WHEN 1 THEN '已成团'
		WHEN 2 THEN '失效'
		ELSE '异常'
		END AS statusName,
		CASE b2b_bind.isUpDown
		WHEN 1 THEN '上架'
		WHEN 2 THEN '下架'
		ELSE '异常'
		END AS isUpDownName
        FROM b2b_bind
        <include refid="searchGridWhere"/>
        <if test="orderName != null">
            order by ${orderName} ${orderType}
        </if>
        <if test="limit != null">
            limit #{start},#{limit}
        </if>
    </select>
 
    <select id="searchGridCount" parameterType="java.util.Map"
            resultType="int">
        SELECT count(*) FROM b2b_bind
        <include refid="searchGridWhere"/>
    </select>

    <!-- 根据pk查询拼团活动 -->
    <select id="getBind" resultType="cn.cf.dto.B2bBindDto" parameterType="java.lang.String">
    	SELECT * FROM `b2b_bind`  where `b2b_bind`.pk = #{pk} 
    </select>


    <select id="selectBoxes" parameterType="java.lang.String" resultType="int">
       SELECT SUM(soldBoxes) AS soldBoxes FROM `b2b_bind_goods`  WHERE  bindPk=#{bindPk}
    </select>

    <select id="selectSoldBoxes" parameterType="java.lang.String" resultType="int">
          SELECT  SUM(boxes) AS boxes FROM `b2b_bind_goods`  WHERE  bindPk=#{bindPk}
    </select>


    <update id="updateStatus">
        update  b2b_bind
        set status =  1,isUpDown=2
        where pk = #{bindPk}
    </update>

    <!-- 删除拼团活动 -->
    <delete id="delBind">
	    <![CDATA[
	        DELETE FROM b2b_bind WHERE  pk = #{pk} 
	    ]]>
	</delete>
    
    
    <!-- 更新部分字段 -->
	<update id="updateEx" parameterType="cn.cf.model.B2bBind">
		UPDATE b2b_bind
		<set>
			<if test="bindName != null and bindName !=''">
				bindName = #{bindName} ,
			</if>
			<if test="bindProductID != null and  bindProductID !='' ">
				bindProductID = #{bindProductID} ,
			</if>
			<if test="bindProductCount != null and bindProductCount !='' ">
				bindProductCount = #{bindProductCount} ,
			</if>
			<if test="bindReason != null and bindReason !=''">
				bindReason = #{bindReason} ,
			</if>
			<if test="bindProductDetails != null and bindProductDetails !=''">
				bindProductDetails = #{bindProductDetails} ,
			</if>
			<if test="bindProductPrice != null and bindProductPrice !=''">
				bindProductPrice = #{bindProductPrice} ,
			</if>
			<if test="storePk != null and storePk !=''">
				storePk = #{storePk} ,
			</if>
			<if test="storeName != null and storeName !=''">
				storeName = #{storeName} ,
			</if>
			<if test="updateTime != null ">
				updateTime = #{updateTime} ,
			</if>
			<if test="insertTime != null ">
				insertTime = #{insertTime} ,
			</if>
			<if test="status != null ">
				status = #{status} ,
			</if>
			<if test="isUpDown != null   ">
				isUpDown = #{isUpDown}
			</if>
		</set>
		WHERE pk = #{pk}
	</update>
    
    <update id="updateOverdue">
    	update b2b_bind set isUpDown = 2
    </update>
    
    
     <select id="getBindLists" resultType="cn.cf.dto.B2bBindDto"  parameterType="java.util.Map">
        SELECT pk,bindName
        FROM b2b_bind
        where  isUpDown=2  and storePk = #{storePk}
    </select>
    
    
    <!-- 拼团管理页签数量 -->
	<select id="getBindListCount" resultType="map">
		SELECT COUNT(1) AS allNum,
		IFNULL(
		SUM(
		CASE isUpDown
		WHEN 1 THEN 1 ELSE 0 END
		),
		0
		) 
		AS upNum,
		IFNULL(
		SUM(
		CASE isUpDown
		WHEN 2
		THEN
		1
		ELSE
		0
		END
		),
		0
		) AS downNum
		FROM
		b2b_bind 
		<include refid="searchGridWhere" />
	</select>
    
</mapper>